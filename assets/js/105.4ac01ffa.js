(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{572:function(t,s,e){"use strict";e.r(s);var i=e(11),r=Object(i.a)({},(function(){var t=this.$createElement,s=this._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[s("h1",{attrs:{id:"可靠通讯"}},[this._v("可靠通讯")]),this._v(" "),s("p",[this._v("微服务提倡"),s("RouterLink",{attrs:{to:"/architecture/architect-history/microservices.html"}},[this._v("分散治理")]),this._v("，不提倡追求统一的技术平台，提倡让团队有自由选择的权利。在开发阶段构建服务时，分散治理打破了由技术栈带来的约束界限，好处是不言自明的。但在运维阶段考虑安全问题时，由Java、Golang、Python、Node等多种语言和框架组成的微服务系统，出现安全漏洞的概率必然要比只采用其中某种语言、某种框架的构建的单体系统来的更高。为了避免由于单个微服务节点出现漏洞被攻击者突破，进而导致整个系统和内网都遭到入侵，我们必须改变一部分在此前的安全观念，构筑更加可靠的服务间通讯机制。")],1)])}),[],!1,null,null,null);s.default=r.exports}}]);