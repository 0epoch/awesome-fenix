(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{330:function(t,n,s){"use strict";s.r(n);var e=s(11),i=Object(e.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h1",{attrs:{id:"微服务架构"}},[this._v("微服务架构")]),this._v(" "),n("p",[this._v("提纲：")]),this._v(" "),n("p",[this._v("可扩展：水平扩展、垂直扩展。 通过冗余部署，避免单点故障。\n隔离：避免单一业务占用全部资源。避免业务之间的相互影响 2. 机房隔离避免单点故障。\n解耦：降低维护成本，降低耦合风险。减少依赖，减少相互间的影响。\n限流：滑动窗口计数法、漏桶算法、令牌桶算法等算法。遇到突发流量时，保证系统稳定。\n降级：紧急情况下释放非核心功能的资源。牺牲非核心业务，保证核心业务的高可用。\n熔断：异常情况超出阈值进入熔断状态，快速失败。减少不稳定的外部依赖对核心服务的影响。\n自动化测试：通过完善的测试，减少发布引起的故障。\n灰度发布：灰度发布是速度与安全性作为妥协，能够有效减少发布故障。")])])}),[],!1,null,null,null);n.default=i.exports}}]);